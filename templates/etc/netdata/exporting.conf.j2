[exporting:global]
    enabled = {{ netdata_exporting_global_enabled }}
    # send configured labels = yes
    # send automatic labels = no
    # update every = 10

{% for opentsdb in netdata_exporting_opentsdb_instances %}
[opentsdb:{{ opentsdb.protocol }}:{{ opentsdb.name }}]
    enabled = {{ opentsdb.enabled }}
    destination = {{ opentsdb.destination }}
    data source = {{ opentsdb.data_source }}
    prefix = {{ opentsdb.prefix }}
    hostname = {{ opentsdb.hostname }}
    update every = {{ opentsdb.update_every }}
    buffer on failures = {{ opentsdb.buffer_on_failures }}
    timeout ms = {{ opentsdb.timeout_ms }}
    send names instead of ids = {{ opentsdb.send_names_instead_of_ids }}
    send charts matching = {{ opentsdb.send_charts_matching }}
    send hosts matching = {{ opentsdb.send_hosts_matching }}
{% endfor %}

[prometheus:exporter]
    # send names instead of ids = yes
    # send configured labels = yes
    # send automatic labels = no
    # send charts matching = *
    # send hosts matching = localhost *
    # prefix = netdata

# An example configuration for graphite, json, opentsdb exporting connectors
# [graphite:my_graphite_instance]
    # enabled = no
    # destination = localhost
    # data source = average
    # prefix = netdata
    # hostname = my_hostname
    # update every = 10
    # buffer on failures = 10
    # timeout ms = 20000
    # send names instead of ids = yes
    # send charts matching = *
    # send hosts matching = localhost *

{% for graphite in netdata_exporting_graphite_instances %}
[graphite:{{ graphite.name }}]
    enabled = {{ graphite.enabled }}
    destination = {{ graphite.destination }}
    data source = {{ graphite.data_source }}
    prefix = {{ graphite.prefix }}
    hostname = {{ graphite.hostname }}
    update every = {{ graphite.update_every }}
    buffer on failures = {{ graphite.buffer_on_failures }}
    timeout ms = {{ graphite.timeout_ms }}
    send names instead of ids = {{ graphite.send_names_instead_of_ids }}
    send charts matching = {{ graphite.send_charts_matching }}
    send hosts matching = {{ graphite.send_hosts_matching }}
{% endfor %}

# [prometheus_remote_write:my_prometheus_remote_write_instance]
    # enabled = no
    # destination = localhost
    # remote write URL path = /receive
    # data source = average
    # prefix = netdata
    # hostname = my_hostname
    # update every = 10
    # buffer on failures = 10
    # timeout ms = 20000
    # send names instead of ids = yes
    # send charts matching = *
    # send hosts matching = localhost *

# [kinesis:my_kinesis_instance]
    # enabled = no
    # destination = us-east-1
    # stream name = netdata
    # aws_access_key_id = my_access_key_id
    # aws_secret_access_key = my_aws_secret_access_key
    # data source = average
    # prefix = netdata
    # hostname = my_hostname
    # update every = 10
    # buffer on failures = 10
    # timeout ms = 20000
    # send names instead of ids = yes
    # send charts matching = *
    # send hosts matching = localhost *

# [pubsub:my_pubsub_instance]
    # enabled = no
    # destination = pubsub.googleapis.com
    # credentials file = /etc/netdata/pubsub_credentials.json
    # project id = my_project
    # topic id = my_topic
    # data source = average
    # prefix = netdata
    # hostname = my_hostname
    # update every = 10
    # buffer on failures = 10
    # timeout ms = 20000
    # send names instead of ids = yes
    # send charts matching = *
    # send hosts matching = localhost *

# [mongodb:my_mongodb_instance]
    # enabled = no
    # destination = localhost
    # database = my_database
    # collection = my_collection
    # data source = average
    # prefix = netdata
    # hostname = my_hostname
    # update every = 10
    # buffer on failures = 10
    # timeout ms = 20000
    # send names instead of ids = yes
    # send charts matching = *
    # send hosts matching = localhost *
